#include "cuda_runtime.h"
#include "device_launch_parameters.h"

#include <stdio.h>
int ARRAY_SIZE = 1<<3;

/********************** Initialize input vector **************************/
void init(int h_in[])
{
    for (int i = 0; i < ARRAY_SIZE; i++) 
    {
		    h_in[i] = i;
	  }
}
/********************** Cube **************************/
__global__ void cube(int * d_out, int * d_in) {
	
	/*TODO : Initialze Index and compute (calculate) one cube element in CUDA */
}
/********************** main **************************/
int main(int argc, char ** argv) 
{
	const int ARRAY_BYTES = ARRAY_SIZE * sizeof(int);

	// generate the input array on the host
	int h_in[ARRAY_SIZE];
	init(h_in);
	int h_out[ARRAY_SIZE];

	// declare GPU memory pointers
	int * d_in;
	int * d_out;
	/* ********************************************************** */
	/*TODO : allocate GPU memory for input and output arrays*/
	

	/* ********************************************************** */
	/*TDOD : transfer the input array to the GPU
	
	/* ********************************************************** */
	/*TODO : launch the kernel*/

	/* ********************************************************** */
	/*TODO : copy back the result array to the CPU*/


	// print out the resulting array
	for (int i = 0; i < ARRAY_SIZE; i++) {
		printf("%d", h_out[i]);
		printf(((i % 4) != 3) ? "\t" : "\n");
	}
	
	/* ********************************************************** */
	/*TODO : Free GPU memory*/


	return 0;
}
/********************** End **************************/